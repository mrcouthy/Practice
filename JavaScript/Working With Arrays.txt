Arrays
Js
__
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.valueOf(); 
For JavaScript arrays, valueOf() and toString() are equal.

fruits.join(" * ");
fruits.pop();
fruits.push("Kiwi");
Shifting is equivalent to popping, working on the first element instead of the last.
fruits.shift();    
fruits.unshift("Lemon");  

The splice() method can be used to add new items to an array: 
fruits.splice(2, 0, "Lemon", "Kiwi");
fruits.splice(0,1);        // Removes the first element of fruits 

var citrus = fruits.slice(1, 3); //slices out a piece of an array

fruits.sort();  
fruits.reverse();
//Numeric sort
points.sort(function(a, b){return a-b}); 

Join arrays
var myChildren = myGirls.concat(myBoys);



JQ
___
$.each()

$.inArray()

KO(http://www.knockmeout.net/2011/04/utility-functions-in-knockoutjs.html)
___
ko.utils.arrayForEach
ko.utils.arrayFilter
ko.utils.arrayFirst
ko.utils.arrayMap
ko.utils.arrayGetDistinctValues
ko.utils.compareArrays

ko.utils.stringStartsWith


 ko.utils.arrayForEach(this.items(), function(item) {
        var value = parseFloat(item.priceWithTax());
        if (!isNaN(value)) {
            total += value;
        }
    });

The result of ko.utils.compareArrays is an array that contains items with a status property (added, deleted, or retained) and a value property holding the original item.